{"status":{},"contains_secrets":true,"product_version":"3.5.2","spec":{"description":"","resources":{"endpoints_information":[],"endpoint_definition_list":[],"client_attrs":{},"credential_definition_list":[],"runbook":{"task_definition_list":[{"retries":"0","description":"","inherit_target":false,"child_tasks_local_reference_list":[{"kind":"app_task","name":"Validate Parameters"},{"kind":"app_task","name":"Create BP"},{"kind":"app_task","name":"Launch BP"}],"name":"a0c17627_dag","attrs":{"edges":[{"from_task_reference":{"kind":"app_task","name":"Validate Parameters"},"edge_type":"user_defined","type":"","to_task_reference":{"kind":"app_task","name":"Create BP"}},{"from_task_reference":{"kind":"app_task","name":"Create BP"},"edge_type":"user_defined","type":"","to_task_reference":{"kind":"app_task","name":"Launch BP"}}],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[]},{"retries":"0","description":"","inherit_target":false,"child_tasks_local_reference_list":[],"name":"Validate Parameters","attrs":{"exit_status":[],"script":"sleep(2)\nimport requests\nfrom requests.auth import HTTPBasicAuth\nPC_IP = \"@@{PC_IP}@@\".strip()\npc_username = \"@@{prism_central_username}@@\".strip()\npc_password = \"@@{prism_central_passwd}@@\".strip()\nmanagement_pc_username = \"@@{management_pc_username}@@\".strip()\nmanagement_pc_password = \"@@{management_pc_password}@@\".strip()\n\ndef _build_url(scheme, resource_type, host=PC_IP, **params):\n    _base_url = \"\/api\/nutanix\/v3\"\n    url = \"{proto}:\/\/{host}\".format(proto=scheme, host=host)\n    port = params.get('nutanix_port', '9440')\n    if port:\n        url = url + \":{0}\".format(port) + _base_url\n    if resource_type.startswith(\"\/\"):\n        url += resource_type\n    else:\n        url += \"\/{0}\".format(resource_type)\n    return url\n        \ndef get_project_details(project_name):\n    url = _build_url(scheme=\"https\",host=\"localhost\",resource_type=\"\/projects\/list\")\n    data = requests.post(url, json={\"kind\":\"project\", \"filter\":\"name==%s\"%project_name},\n                        auth=HTTPBasicAuth(management_pc_username, management_pc_password),\n                        timeout=None, verify=False)\n    if data.ok:\n        if data.json()[\"metadata\"][\"total_matches\"] == 1:\n            print(\"project_uuid={}\".format(data.json()[\"entities\"][0][\"metadata\"][\"uuid\"]))\n        else:\n            print(\"Failed to get correct project details. Make sure project name is correct.\")\n            print(data.json().get('message_list',data.json().get('error_detail', data.json())))\n            exit(1)\n    else:\n        print(\"Error in fetching project details.\")\n        print(data.json().get('message_list',data.json().get('error_detail', data.json())))\n        exit(1)\n        \ndef get_cluster_details(cluster_name):\n    payload = {\"kind\": \"cluster\"}\n    url = _build_url(scheme=\"https\",\n                    resource_type=\"\/clusters\/list\")\n    data = requests.post(url, json=payload,\n                         auth=HTTPBasicAuth(pc_username, pc_password), \n                         verify=False)\n    if data.ok:\n        for _cluster in data.json()['entities']:\n            if _cluster['status']['name'] == cluster_name:\n                print(\"cluster_uuid={}\".format(_cluster['metadata']['uuid']))\n                return \n        print(\"Input Error :- Given cluster %s not present on %s\"%(cluster_name, PC_IP))\n        exit(1)\n    else:\n        print(\"Error while fetching %s cluster info\"%cluster_name)\n        print(data.json().get('message_list',data.json().get('error_detail', data.json())))\n        exit(1)\n        \ndef get_subnet_uuid(subnet_name):\n    url = _build_url(scheme=\"https\",resource_type=\"\/subnets\/list\")\n    data = requests.post(url, json={\"kind\":\"subnet\", \"filter\":\"name==%s\"%subnet_name},\n                         auth=HTTPBasicAuth(pc_username, pc_password),\n                         timeout=None, verify=False)\n    if data.ok:\n        if data.json()['metadata']['total_matches'] == 0:\n            print(\"%s not present on %s\"%(subnet_name, PC_IP))\n            exit(1)\n        elif data.json()['metadata']['total_matches'] > 1:\n            print(\"There are more than one subnets with name - %s on - %s\"%(subnet_name, PC_IP))\n            print(\"Please delete it manually before executing runbook.\")\n            exit(1)\n        else:\n            print(\"subnet_uuid={}\".format(data.json()['entities'][0]['metadata']['uuid']))\n            print(\"vpc_uuid={}\".format(data.json()[\"entities\"][0][\"spec\"]\\\n                                [\"resources\"][\"vpc_reference\"][\"uuid\"]))\n    else:\n        print(\"Error while fetching subnet details :- \",data.json().get('message_list',\n                                     data.json().get('error_detail', data.json())))\n        exit(1)\n        \ndef get_image_uuid(image_name):\n    url = _build_url(scheme=\"https\",resource_type=\"\/images\/list\")\n    data = requests.post(url, json={\"kind\":\"image\", \"filter\":\"name==%s\"%image_name},\n                        auth=HTTPBasicAuth(pc_username, pc_password),\n                        timeout=None, verify=False)\n    if data.ok:\n        print(\"image_uuid={}\".format(data.json()['entities'][0]['metadata']['uuid']))\n    else:\n        print(\"Error -- %s Image not present on %s\"%(image_name, PC_IP))\n        exit(1)\n        \ndef get_account_uuid(account_name,cluster_name):\n    url = _build_url(scheme=\"https\",host=\"localhost\",resource_type=\"\/accounts\/list\")\n    data = requests.post(url, json={\"kind\":\"account\"},\n                        auth=HTTPBasicAuth(management_pc_username, management_pc_password),\n                        timeout=None, verify=False)       \n    if account_name in str(data.json()):\n        for new_data in data.json()['entities']:\n            if new_data['metadata']['name'] == account_name:\n                for _cluster in new_data[\"status\"][\"resources\"][\"data\"][\"cluster_account_reference_list\"]:\n                    if _cluster[\"resources\"][\"data\"][\"cluster_name\"] == cluster_name:\n                        account_uuid = _cluster[\"uuid\"]\n                        print(\"account_uuid={}\".format(account_uuid))\n    else:\n        print(\"Error : %s account not present on %s\"%(account_name,PC_IP))\n        exit(1)  \n        \ndef get_environment_details(env_name):\n    url = _build_url(scheme=\"https\",host=\"localhost\",resource_type=\"\/environments\/list\")\n    data = requests.post(url, json={\"kind\":\"environment\", \"filter\":\"name==%s\"%env_name},\n                         auth=HTTPBasicAuth(management_pc_username, management_pc_password),\n                         timeout=None, verify=False)\n    if data.ok:\n        if data.json()['metadata']['total_matches'] == 0:\n            print(\"%s environment not present on %s\"%(env_name, PC_IP))\n            exit(1)\n        elif data.json()['metadata']['total_matches'] > 1:\n            print(\"There are more than one environment with name - %s on - %s\"%(env_name, PC_IP))\n            exit(1)\n        else:\n            print(\"environment_uuid={}\".format(data.json()['entities'][0]['metadata']['uuid']))\n    else:\n        print(\"Error while fetching environment details :- \",data.json().get('message_list',\n                                     data.json().get('error_detail', data.json())))\n        exit(1)\n\nget_project_details(\"@@{project_name}@@\".strip())\nget_cluster_details(\"@@{cluster_name}@@\".strip())\nget_subnet_uuid(\"@@{subnet_name}@@\".strip())\nget_image_uuid(\"@@{image_name}@@\".strip())\nget_account_uuid(\"@@{account_name}@@\".strip(),\"@@{cluster_name}@@\".strip())\nget_environment_details(\"@@{environment_name}@@\".strip())","eval_variables":["project_uuid","cluster_uuid","subnet_uuid","account_uuid","image_uuid","environment_uuid","vpc_uuid"],"eval_scope":"local","type":"","script_type":"static"},"timeout_secs":"0","type":"SET_VARIABLE","variable_list":[]},{"retries":"0","description":"","inherit_target":false,"child_tasks_local_reference_list":[],"name":"Create BP","attrs":{"exit_status":[],"script":"# script\nimport requests\nfrom requests.auth import HTTPBasicAuth\n\nPC_IP = \"@@{PC_IP}@@\".strip()\npc_username = \"@@{prism_central_username}@@\".strip()\npc_password = \"@@{prism_central_passwd}@@\".strip()\n\nmanagement_username = \"@@{management_pc_username}@@\".strip()\nmanagement_password = \"@@{management_pc_password}@@\".strip()\n\ndef _build_url(scheme, resource_type, host=PC_IP, **params):\n    _base_url = \"\/api\/nutanix\/v3\"\n    url = \"{proto}:\/\/{host}\".format(proto=scheme, host=host)\n    port = params.get('nutanix_port', '9440')\n    if port:\n        url = url + \":{0}\".format(port) + _base_url\n    if resource_type.startswith(\"\/\"):\n        url += resource_type\n    else:\n        url += \"\/{0}\".format(resource_type)\n    return url\n\ndef create_blueprint(**params):\n    url = _build_url(scheme=\"https\", host=\"localhost\",\n                    resource_type=\"\/idempotence_identifiers\")\n    data = requests.post(url, json={\"count\": 39,\"valid_duration_in_minutes\": 527040},\n                        auth=HTTPBasicAuth(management_username, management_password),\n                        timeout=None, verify=False)\n    uuid = []\n    if data.ok:\n        uuid = data.json()['uuid_list']\n        #print(\"bp_spec_uuid={}\".format(uuid))\n    else:\n        print(\"Error :- Failed to generate UUID's for app_protection_rule\")\n        exit(1)\n        \n    connection_type = \"POWERSHELL\"\n    connection_port = 5985\n    connection_protocol = \"http\"\n    if \"@@{vm_os}@@\" == \"Linux\":\n        connection_type = \"SSH\"\n        connection_port = 22\n        connection_protocol = \"\"\n        \n    ip_list = []\n    if \"@@{custom_ip_for_vm}@@\".strip().lower() not in [\"\", \"na\", \"none\"]:\n        ip_list = [{\"ip\": \"@@{custom_ip_for_vm}@@\".strip()}]\n\n    payload = {\n    \"api_version\": \"3.0\",\n    \"metadata\": {\n        \"kind\": \"blueprint\",\n        \"categories\": {\n            \"TemplateType\": \"Vm\"\n        },\n        \"project_reference\": {\n            \"kind\": \"project\",\n            \"uuid\": params[\"project_uuid\"]\n        }\n    },\n    \"spec\": {\n        \"resources\": {\n            \"client_attrs\": {},\n            \"type\": \"USER\",\n            \"app_profile_list\": [\n                {\n                    \"name\": \"Default\",\n                    \"action_list\": [\n                        {\n                            \"description\": \"\",\n                            \"name\": \"Snapshot_@@{app_name}@@\",\n                            \"critical\": False,\n                            \"runbook\": {\n                                \"task_definition_list\": [\n                                    {\n                                        \"timeout_secs\": \"\",\n                                        \"variable_list\": [],\n                                        \"attrs\": {\n                                            \"edges\": []\n                                        },\n                                        \"retries\": \"\",\n                                        \"name\": \"Default_Snapshot_Config_@@{app_name}@@_Dag\",\n                                        \"child_tasks_local_reference_list\": [\n                                            {\n                                                \"kind\": \"app_task\",\n                                                \"name\": \"Snapshot_Config_@@{app_name}@@_Task\",\n                                                \"uuid\": uuid[0]\n                                            }\n                                        ],\n                                        \"type\": \"DAG\",\n                                        \"description\": \"\",\n                                        \"uuid\": uuid[1]\n                                    },\n                                    {\n                                        \"timeout_secs\": \"\",\n                                        \"variable_list\": [],\n                                        \"attrs\": {\n                                            \"config_spec_reference\": {\n                                                \"kind\": \"app_config_spec\",\n                                                \"name\": \"Snapshot_Config_@@{app_name}@@\",\n                                                \"uuid\": uuid[2]\n                                            }\n                                        },\n                                        \"retries\": \"\",\n                                        \"name\": \"Snapshot_Config_@@{app_name}@@\",\n                                        \"target_any_local_reference\": {\n                                            \"kind\": \"app_blueprint_deployment\",\n                                            \"uuid\": uuid[3]\n                                        },\n                                        \"child_tasks_local_reference_list\": [],\n                                        \"type\": \"CALL_CONFIG\",\n                                        \"description\": \"\",\n                                        \"uuid\": uuid[0]\n                                    }\n                                ],\n                                \"description\": \"\",\n                                \"variable_list\": [],\n                                \"main_task_local_reference\": {\n                                    \"kind\": \"app_task\",\n                                    \"name\": \"Default_Snapshot_Config_@@{app_name}@@_Dag\",\n                                    \"uuid\": uuid[1]\n                                },\n                                \"name\": \"Default_Snapshot_Config_@@{app_name}@@_Runbook\",\n                                \"uuid\": uuid[4]\n                            },\n                            \"type\": \"user\",\n                            \"uuid\": uuid[5]\n                        },\n                        {\n                            \"description\": \"\",\n                            \"name\": \"Restore_@@{app_name}@@\",\n                            \"critical\": False,\n                            \"runbook\": {\n                                \"task_definition_list\": [\n                                    {\n                                        \"timeout_secs\": \"\",\n                                        \"variable_list\": [],\n                                        \"attrs\": {\n                                            \"edges\": []\n                                        },\n                                        \"retries\": \"\",\n                                        \"name\": \"Default_Restore_Config_@@{app_name}@@_Dag\",\n                                        \"child_tasks_local_reference_list\": [\n                                            {\n                                                \"kind\": \"app_task\",\n                                                \"name\": \"Restore_Config_@@{app_name}@@_Task\",\n                                                \"uuid\": uuid[6]\n                                            }\n                                        ],\n                                        \"type\": \"DAG\",\n                                        \"description\": \"\",\n                                        \"uuid\": uuid[7]\n                                    },\n                                    {\n                                        \"timeout_secs\": \"\",\n                                        \"variable_list\": [],\n                                        \"attrs\": {\n                                            \"config_spec_reference\": {\n                                                \"kind\": \"app_config_spec\",\n                                                \"name\": \"Restore_Config_@@{app_name}@@\",\n                                                \"uuid\": uuid[8]\n                                            }\n                                        },\n                                        \"retries\": \"\",\n                                        \"name\": \"Restore_Config_@@{app_name}@@_Task\",\n                                        \"target_any_local_reference\": {\n                                            \"kind\": \"app_blueprint_deployment\",\n                                            \"uuid\": uuid[3]\n                                        },\n                                        \"child_tasks_local_reference_list\": [],\n                                        \"type\": \"CALL_CONFIG\",\n                                        \"description\": \"\",\n                                        \"uuid\": uuid[6]\n                                    }\n                                ],\n                                \"description\": \"\",\n                                \"variable_list\": [],\n                                \"main_task_local_reference\": {\n                                    \"kind\": \"app_task\",\n                                    \"name\": \"Default_Restore_Config_@@{app_name}@@_Dag\",\n                                    \"uuid\": uuid[7]\n                                },\n                                \"name\": \"Default_Restore_Config_@@{app_name}@@_Runbook\",\n                                \"uuid\": uuid[9]\n                            },\n                            \"type\": \"user\",\n                            \"uuid\": uuid[10]\n                        }\n                    ],\n                    \"variable_list\": [],\n                    \"deployment_create_list\": [\n                        {\n                            \"variable_list\": [],\n                            \"action_list\": [],\n                            \"min_replicas\": \"1\",\n                            \"name\": \"@@{calm_random}@@_deployment\",\n                            \"max_replicas\": \"1\",\n                            \"substrate_local_reference\": {\n                                \"kind\": \"app_substrate\",\n                                \"uuid\": uuid[11]\n                            },\n                            \"default_replicas\": \"1\",\n                            \"type\": \"GREENFIELD\",\n                            \"package_local_reference_list\": [\n                                {\n                                    \"kind\": \"app_package\",\n                                    \"uuid\": uuid[12]\n                                }\n                            ],\n                            \"uuid\": uuid[3]\n                        }\n                    ],\n                    \"environment_reference_list\": [\n                        params[\"environment\"]\n                    ],\n                    \"snapshot_config_list\": [\n                        {\n                            \"description\": \"\",\n                            \"attrs_list\": [\n                                {\n                                    \"target_any_local_reference\": {\n                                        \"kind\": \"app_blueprint_deployment\",\n                                        \"uuid\": uuid[3]\n                                    },\n                                    \"snapshot_location_type\": \"LOCAL\",\n                                    \"num_of_replicas\": \"ONE\"\n                                }\n                            ],\n                            \"type\": \"AHV_SNAPSHOT\",\n                            \"variable_list\": [\n                                {\n                                    \"attrs\": {},\n                                    \"is_mandatory\": True,\n                                    \"name\": \"snapshot_name\",\n                                    \"editables\": {\n                                        \"value\": True\n                                    },\n                                    \"data_type\": \"BASE\",\n                                    \"value\": \"snapshot-@@{calm_array_index}@@-@@{calm_time}@@\",\n                                    \"label\": \"\",\n                                    \"val_type\": \"STRING\",\n                                    \"type\": \"LOCAL\",\n                                    \"description\": \"\",\n                                    \"is_hidden\": False,\n                                    \"uuid\": uuid[13]\n                                },\n                                {\n                                    \"attrs\": {},\n                                    \"is_mandatory\": True,\n                                    \"name\": \"snapshot_type\",\n                                    \"editables\": {\n                                        \"value\": True\n                                    },\n                                    \"data_type\": \"BASE\",\n                                    \"value\": \"CRASH_CONSISTENT\",\n                                    \"label\": \"\",\n                                    \"val_type\": \"STRING\",\n                                    \"type\": \"LOCAL\",\n                                    \"description\": \"\",\n                                    \"is_hidden\": False,\n                                    \"uuid\": uuid[14]\n                                }\n                            ],\n                            \"name\": \"Snapshot_Config_@@{app_name}@@\",\n                            \"config_reference_list\": [\n                                {\n                                    \"kind\": \"app_config_spec\",\n                                    \"uuid\": uuid[8]\n                                }\n                            ],\n                            \"uuid\": uuid[2]\n                        }\n                    ],\n                    \"restore_config_list\": [\n                        {\n                            \"description\": \"\",\n                            \"attrs_list\": [\n                                {\n                                    \"target_any_local_reference\": {\n                                        \"kind\": \"app_blueprint_deployment\",\n                                        \"uuid\": uuid[3]\n                                    },\n                                    \"delete_vm_post_restore\": True,\n                                    \"snapshot_location_type\": \"LOCAL\"\n                                }\n                            ],\n                            \"type\": \"AHV_RESTORE\",\n                            \"variable_list\": [\n                                {\n                                    \"attrs\": {},\n                                    \"is_mandatory\": True,\n                                    \"name\": \"snapshot_uuids\",\n                                    \"editables\": {\n                                        \"value\": True\n                                    },\n                                    \"data_type\": \"BASE\",\n                                    \"value\": \"\",\n                                    \"label\": \"\",\n                                    \"val_type\": \"STRING\",\n                                    \"type\": \"LOCAL\",\n                                    \"description\": \"\",\n                                    \"is_hidden\": False,\n                                    \"uuid\": uuid[16]\n                                }\n                            ],\n                            \"name\": \"Restore_Config_@@{app_name}@@\",\n                            \"uuid\": uuid[8]\n                        }\n                    ],\n                    \"uuid\": uuid[17]\n                }\n            ],\n            \"substrate_definition_list\": [\n                {\n                    \"variable_list\": [],\n                    \"action_list\": [],\n                    \"name\": \"VM1\",\n                    \"editables\": {},\n                    \"os_type\": \"@@{vm_os}@@\",\n                    \"type\": \"AHV_VM\",\n                    \"readiness_probe\": {\n                        \"connection_type\": connection_type,\n                        \"retries\": \"5\",\n                        \"connection_protocol\": connection_protocol,\n                        \"disable_readiness_probe\": True,\n                        \"address\": \"\",\n                        \"delay_secs\": \"5\",\n                        \"connection_port\": connection_port,\n                        \"login_credential_local_reference\": {\n                            \"kind\": \"app_credential\",\n                            \"uuid\": uuid[18]\n                        }\n                    },\n                    \"description\": \"\",\n                    \"create_spec\": {\n                        \"name\": params[\"vm_name\"],\n                        \"categories\": @@{tenant_category}@@,\n                        \"availability_zone_reference\": None,\n                        \"backup_policy\": None,\n                        \"type\": \"\",\n                        \"cluster_reference\": {\n                            \"kind\": \"cluster\",\n                            \"uuid\": params[\"cluster_uuid\"]\n                        },\n                        \"resources\": {\n                            \"disk_list\": [\n                                {\n                                    \"data_source_reference\": {\n                                        \"kind\": \"image\",\n                                        \"name\": \"@@{image_name}@@\".strip(),\n                                        \"uuid\": params[\"image_uuid\"]\n                                    },\n                                    \"type\": \"\",\n                                    \"disk_size_mib\": 0,\n                                    \"volume_group_reference\": None,\n                                    \"device_properties\": {\n                                        \"type\": \"\",\n                                        \"device_type\": \"DISK\",\n                                        \"disk_address\": {\n                                            \"adapter_type\": \"SCSI\",\n                                            \"device_index\": 0,\n                                            \"type\": \"\"\n                                        }\n                                    }\n                                }\n                            ],\n                            \"hardware_clock_timezone\": \"\",\n                            \"memory_size_mib\": @@{vm_memory}@@ * 1024,\n                            \"num_sockets\": @@{vm_vcpus}@@,\n                            \"num_vcpus_per_socket\": 1,\n                            \"account_uuid\": params[\"account_uuid\"],\n                            \"boot_config\": {\n                                \"boot_device\": {\n                                    \"type\": \"\",\n                                    \"disk_address\": {\n                                        \"adapter_type\": \"SCSI\",\n                                        \"device_index\": 0,\n                                        \"type\": \"\"\n                                    }\n                                },\n                                \"type\": \"\",\n                                \"boot_type\": \"LEGACY\",\n                                \"mac_address\": \"\"\n                            },\n                            \"gpu_list\": [],\n                            \"serial_port_list\": [\n                                {\n                                    \"index\": 0,\n                                    \"type\": \"\",\n                                    \"is_connected\": True\n                                }\n                            ],\n                            \"guest_tools\": None,\n                            \"nic_list\": [\n                                {\n                                    \"nic_type\": \"NORMAL_NIC\",\n                                    \"vpc_reference\": None,\n                                    \"ip_endpoint_list\": ip_list,\n                                    \"network_function_chain_reference\": None,\n                                    \"network_function_nic_type\": \"INGRESS\",\n                                    \"mac_address\": \"\",\n                                    \"subnet_reference\": {\n                                        \"kind\": \"subnet\",\n                                        \"uuid\": params[\"subnet_uuid\"]\n                                    },\n                                    \"type\": \"\"\n                                }\n                            ],\n                            \"parent_reference\": None,\n                            \"power_state\": \"ON\",\n                            \"type\": \"\"\n                        }\n                    },\n                    \"uuid\": uuid[11]\n                }\n            ],\n            \"package_definition_list\": [\n                {\n                    \"type\": \"DEB\",\n                    \"variable_list\": [],\n                    \"options\": {\n                        \"install_runbook\": {\n                            \"name\": \"@@{calm_random}@@_@@{calm_random}@@_runbook\",\n                            \"variable_list\": [],\n                            \"main_task_local_reference\": {\n                                \"kind\": \"app_task\",\n                                \"uuid\": uuid[19]\n                            },\n                            \"task_definition_list\": [\n                                {\n                                    \"name\": \"@@{calm_random}@@_@@{calm_random}@@_dag\",\n                                    \"target_any_local_reference\": {\n                                        \"kind\": \"app_package\",\n                                        \"uuid\": uuid[12]\n                                    },\n                                    \"variable_list\": [],\n                                    \"child_tasks_local_reference_list\": [],\n                                    \"type\": \"DAG\",\n                                    \"attrs\": {\n                                        \"edges\": []\n                                    },\n                                    \"uuid\": uuid[19]\n                                }\n                            ],\n                            \"uuid\": uuid[20]\n                        },\n                        \"uninstall_runbook\": {\n                            \"name\": \"@@{calm_random}@@_@@{calm_random}@@_runbook\",\n                            \"variable_list\": [],\n                            \"main_task_local_reference\": {\n                                \"kind\": \"app_task\",\n                                \"uuid\": uuid[21]\n                            },\n                            \"task_definition_list\": [\n                                {\n                                    \"name\": \"@@{calm_random}@@_@@{calm_random}@@_dag\",\n                                    \"target_any_local_reference\": {\n                                        \"kind\": \"app_package\",\n                                        \"uuid\": uuid[12]\n                                    },\n                                    \"variable_list\": [],\n                                    \"child_tasks_local_reference_list\": [],\n                                    \"type\": \"DAG\",\n                                    \"attrs\": {\n                                        \"edges\": []\n                                    },\n                                    \"uuid\": uuid[21]\n                                }\n                            ],\n                            \"uuid\": uuid[22]\n                        }\n                    },\n                    \"service_local_reference_list\": [\n                        {\n                            \"kind\": \"app_service\",\n                            \"uuid\": uuid[23]\n                        }\n                    ],\n                    \"name\": \"Package1\",\n                    \"uuid\": uuid[12]\n                }\n            ],\n            \"service_definition_list\": [\n                {\n                    \"name\": \"Service1\",\n                    \"depends_on_list\": [],\n                    \"variable_list\": [],\n                    \"port_list\": [],\n                    \"action_list\": [\n                        {\n                            \"name\": \"action_create\",\n                            \"runbook\": {\n                                \"name\": \"@@{calm_random}@@_@@{calm_random}@@_runbook\",\n                                \"variable_list\": [],\n                                \"main_task_local_reference\": {\n                                    \"kind\": \"app_task\",\n                                    \"uuid\": uuid[24]\n                                },\n                                \"task_definition_list\": [\n                                    {\n                                        \"name\": \"@@{calm_random}@@_@@{calm_random}@@_dag\",\n                                        \"target_any_local_reference\": {\n                                            \"kind\": \"app_service\",\n                                            \"uuid\": uuid[23]\n                                        },\n                                        \"variable_list\": [],\n                                        \"child_tasks_local_reference_list\": [],\n                                        \"type\": \"DAG\",\n                                        \"attrs\": {\n                                            \"edges\": []\n                                        },\n                                        \"uuid\": uuid[24]\n                                    }\n                                ],\n                                \"uuid\": uuid[25]\n                            },\n                            \"type\": \"system\",\n                            \"uuid\": uuid[26]\n                        },\n                        {\n                            \"name\": \"action_delete\",\n                            \"runbook\": {\n                                \"name\": \"@@{calm_random}@@_@@{calm_random}@@_runbook\",\n                                \"variable_list\": [],\n                                \"main_task_local_reference\": {\n                                    \"kind\": \"app_task\",\n                                    \"uuid\": uuid[27]\n                                },\n                                \"task_definition_list\": [\n                                    {\n                                        \"name\": \"@@{calm_random}@@_@@{calm_random}@@_dag\",\n                                        \"target_any_local_reference\": {\n                                            \"kind\": \"app_service\",\n                                            \"uuid\": uuid[23]\n                                        },\n                                        \"variable_list\": [],\n                                        \"child_tasks_local_reference_list\": [],\n                                        \"type\": \"DAG\",\n                                        \"attrs\": {\n                                            \"edges\": []\n                                        },\n                                        \"uuid\": uuid[27]\n                                    }\n                                ],\n                                \"uuid\": uuid[28]\n                            },\n                            \"type\": \"system\",\n                            \"uuid\": uuid[29]\n                        },\n                        {\n                            \"name\": \"action_start\",\n                            \"runbook\": {\n                                \"name\": \"@@{calm_random}@@_@@{calm_random}@@_runbook\",\n                                \"variable_list\": [],\n                                \"main_task_local_reference\": {\n                                    \"kind\": \"app_task\",\n                                    \"uuid\": uuid[30]\n                                },\n                                \"task_definition_list\": [\n                                    {\n                                        \"name\": \"@@{calm_random}@@_@@{calm_random}@@_dag\",\n                                        \"target_any_local_reference\": {\n                                            \"kind\": \"app_service\",\n                                            \"uuid\": uuid[23]\n                                        },\n                                        \"variable_list\": [],\n                                        \"child_tasks_local_reference_list\": [],\n                                        \"type\": \"DAG\",\n                                        \"attrs\": {\n                                            \"edges\": []\n                                        },\n                                        \"uuid\": uuid[30]\n                                    }\n                                ],\n                                \"uuid\": uuid[31]\n                            },\n                            \"type\": \"system\",\n                            \"uuid\": uuid[32]\n                        },\n                        {\n                            \"name\": \"action_stop\",\n                            \"runbook\": {\n                                \"name\": \"@@{calm_random}@@_@@{calm_random}@@_runbook\",\n                                \"variable_list\": [],\n                                \"main_task_local_reference\": {\n                                    \"kind\": \"app_task\",\n                                    \"uuid\": uuid[33]\n                                },\n                                \"task_definition_list\": [\n                                    {\n                                        \"name\": \"@@{calm_random}@@_@@{calm_random}@@_dag\",\n                                        \"target_any_local_reference\": {\n                                            \"kind\": \"app_service\",\n                                            \"uuid\": uuid[23]\n                                        },\n                                        \"variable_list\": [],\n                                        \"child_tasks_local_reference_list\": [],\n                                        \"type\": \"DAG\",\n                                        \"attrs\": {\n                                            \"edges\": []\n                                        },\n                                        \"uuid\": uuid[33]\n                                    }\n                                ],\n                                \"uuid\": uuid[34]\n                            },\n                            \"type\": \"system\",\n                            \"uuid\": uuid[35]\n                        },\n                        {\n                            \"name\": \"action_restart\",\n                            \"runbook\": {\n                                \"name\": \"@@{calm_random}@@_@@{calm_random}@@_runbook\",\n                                \"variable_list\": [],\n                                \"main_task_local_reference\": {\n                                    \"kind\": \"app_task\",\n                                    \"uuid\": uuid[36]\n                                },\n                                \"task_definition_list\": [\n                                    {\n                                        \"name\": \"@@{calm_random}@@_@@{calm_random}@@_dag\",\n                                        \"target_any_local_reference\": {\n                                            \"kind\": \"app_service\",\n                                            \"uuid\": uuid[23]\n                                        },\n                                        \"variable_list\": [],\n                                        \"child_tasks_local_reference_list\": [],\n                                        \"type\": \"DAG\",\n                                        \"attrs\": {\n                                            \"edges\": []\n                                        },\n                                        \"uuid\": uuid[36]\n                                    }\n                                ],\n                                \"uuid\": uuid[37]\n                            },\n                            \"type\": \"system\",\n                            \"uuid\": uuid[38]\n                        }\n                    ],\n                    \"uuid\": uuid[23]\n                }\n            ],\n            \"credential_definition_list\": [\n                {\n                    \"name\": \"Creds_@@{app_name}@@\".strip(),\n                    \"type\": \"PASSWORD\",\n                    \"cred_class\": \"static\",\n                    \"username\": \"@@{credential_user}@@\".strip(),\n                    \"secret\": {\n                        \"attrs\": {\n                            \"is_secret_modified\": True\n                        },\n                        \"value\": \"@@{credential_password}@@\".strip()\n                    },\n                    \"uuid\": uuid[18]\n                }\n            ],\n            \"default_credential_local_reference\": {\n                \"kind\": \"app_credential\",\n                \"uuid\": uuid[18],\n                \"name\": \"Creds_@@{app_name}@@\".strip()\n            }\n        },\n        \"name\": params[\"blueprint_name\"]\n    }}\n\n    url = _build_url(scheme=\"https\", host=\"localhost\",\n                     resource_type=\"\/blueprints\")\n    data = requests.post(url, json=payload,\n                         auth=HTTPBasicAuth(management_username, management_password),\n                         timeout=None, verify=False)\n    wait_for_completion(data)\n    print(\"bp_uuid={}\".format(data.json()['metadata']['uuid']))\n    \ndef wait_for_completion(data):\n    if data.ok:\n        state = data.json()['status'].get('state')\n        while state == \"PENDING\":\n            _uuid = data.json()['status']['execution_context']['task_uuid']\n            url = _build_url(scheme=\"https\", host=\"localhost\",\n                             resource_type=\"\/tasks\/%s\"%_uuid)\n            responce = requests.get(url, auth=HTTPBasicAuth(management_username, \n                                                            management_password),\n                                    verify=False)                      \n            if responce.json()['status'] in ['PENDING', 'RUNNING', 'QUEUED']:\n                state = 'PENDING'\n                sleep(5)                \n            elif responce.json()['status'] == 'FAILED':\n                print(\"Error occured ---> \",data.json().get('message_list', \n                                        data.json().get('error_detail', data.json())))\n                state = 'FAILED'\n                exit(1)\n            else:\n                state = \"COMPLETE\"\n    else:\n        print(\"Error occured ---> \",data.json().get('message_list', \n                                data.json().get('error_detail', data.json())))\n        exit(1)\n\nparams = {\n    \"project_uuid\" : \"@@{project_uuid}@@\",\n    \"environment\": \"@@{environment_uuid}@@\",\n    \"account_uuid\":\"@@{account_uuid}@@\",  # NTNX_LOCAL_AZ\n    \"cluster_uuid\":\"@@{cluster_uuid}@@\",\n    \"subnet_uuid\": \"@@{subnet_uuid}@@\",\n    \"vm_name\":\"VM_@@{app_name}@@\".strip(),\n    \"image_uuid\":\"@@{image_uuid}@@\".strip(),\n    \"blueprint_name\":\"@@{blueprint_name}@@\".strip()\n}\n\ncreate_blueprint(**params)","eval_variables":["protection_policy_uuid","protection_rule_uuid","bp_spec_uuid","bp_uuid"],"eval_scope":"local","type":"","script_type":"static"},"timeout_secs":"0","type":"SET_VARIABLE","variable_list":[]},{"retries":"0","description":"","inherit_target":false,"child_tasks_local_reference_list":[],"name":"Launch BP","attrs":{"script":"# script\nimport requests\nfrom requests.auth import HTTPBasicAuth\n\nPC_IP = \"@@{PC_IP}@@\"\npc_user = \"@@{prism_central_username}@@\"\npc_password = \"@@{prism_central_passwd}@@\"\n\ndef _build_url(scheme, resource_type, host=PC_IP, **params):\n    _base_url = \"\/api\/nutanix\/v3\"\n    url = \"{proto}:\/\/{host}\".format(proto=scheme, host=host)\n    port = params.get('nutanix_port', '9440')\n    if port:\n        url = url + \":{0}\".format(port) + _base_url\n    if resource_type.startswith(\"\/\"):\n        url += resource_type\n    else:\n        url += \"\/{0}\".format(resource_type)\n    return url\n\ndef get_spec(app_profile_uuid,app_name,app_description):\n    return ({\n            \"spec\": {\n                \"app_profile_reference\": {\n                    \"kind\": \"app_profile\",\n                    \"uuid\": app_profile_uuid\n                },\n            \"app_description\": app_description,\n            \"app_name\": app_name\n            }\n          })\n\ndef launch_blueprint(**params):\n    url = _build_url(scheme=\"https\",\n                    resource_type=\"\/blueprints\/%s\"%params['bp_uuid'])\n    data = requests.get(url, auth=HTTPBasicAuth(pc_user,pc_password),verify=False)\n    if data.ok:\n        app_profile_uuid = data.json()[\"spec\"][\"resources\"][\"app_profile_list\"][0][\"uuid\"]\n    else:\n        print(\"Error while fetching Blueprint with UUID - %s \"%params['bp_uuid'])\n        exit(1)\n        \n    payload = get_spec(app_profile_uuid,\n                       app_name=params[\"application_name\"],\n                       app_description=params[\"application_name\"])\n    \n    url = _build_url(scheme=\"https\",\n                    resource_type=\"\/blueprints\/%s\/simple_launch\"%params['bp_uuid'])\n    data = requests.post(url, json=payload,\n                        auth=HTTPBasicAuth(pc_user,pc_password),\n                        timeout=None, verify=False)\n    wait_for_completion(data)\n    \ndef wait_for_completion(data):\n    if data.ok:\n        _uuid = data.json()['status'][\"request_id\"]\n        print(\"Request_Id={}\".format(_uuid))\n        state = \"PENDING\"\n        while state == \"PENDING\":\n            url = _build_url(scheme=\"https\",\n                             resource_type=\"\/tasks\/%s\"%_uuid)\n            responce = requests.get(url, auth=HTTPBasicAuth(pc_user, pc_password),\n                                    verify=False)\n            if not responce.ok:\n                if (\"message_list\" in responce.json()) and (\"ACCESS_DENIED\" in responce.json()[\"message_list\"][0][\"reason\"]):\n                    print(\"Warning :- User don't have access to fetch backend execution details.\")\n                    print(\"User will need to check App details Manually.\")\n                    print(responce.json()[\"message_list\"])\n                    exit(0)\n                else:\n                    print(\"Error :-- \",responce.json())\n                    exit(1)\n                    \n            if responce.json()['status'] in ['PENDING', 'RUNNING', 'QUEUED']:\n                state = 'PENDING'\n                sleep(5)                \n            elif responce.json()['status'] == 'FAILED':\n                print(\"Error occured ---> \",data.json().get('message_list', \n                                        data.json().get('error_detail', data.json())))\n                state = 'FAILED'\n                exit(1)\n            else:\n                state = \"COMPLETE\"\n    else:\n        print(\"Error occured ---> \",data.json().get('message_list', \n                                data.json().get('error_detail', data.json())))\n        exit(1)\n\nparams = {\n    \"project_uuid\" : \"@@{project_uuid}@@\",\n    \"environment\": \"@@{environment_uuid}@@\",\n    \"account_uuid\":\"@@{account_uuid}@@\",  # NTNX_LOCAL_AZ\n    \"cluster_uuid\":\"@@{cluster_uuid}@@\",\n    \"subnet_uuid\": \"@@{subnet_uuid}@@\",\n    \"vm_name\":\"VM_@@{app_name}@@\",\n    \"image_uuid\":\"@@{image_uuid}@@\",\n    \"blueprint_name\":\"@@{blueprint_name}@@\",\n    #\"protection_policy_uuid\":\"@@{protection_policy_uuid}@@\",\n    #\"protection_rule_uuid\":\"@@{protection_rule_uuid}@@\",\n    \"bp_uuid\":\"@@{bp_uuid}@@\",\n    \"application_name\":\"@@{app_name}@@\"\n}\n#launch_blueprint(**params)","type":"","command_line_args":"","exit_status":[],"script_type":"static"},"timeout_secs":"0","type":"EXEC","variable_list":[]}],"description":"","name":"e8d48d56_runbook","main_task_local_reference":{"kind":"app_task","name":"a0c17627_dag"},"variable_list":[{"val_type":"STRING","is_mandatory":true,"description":"","data_type":"BASE","type":"SECRET","name":"management_pc_username","value":"\/uTNVNTeIMUWaIZ\/332bJ\/AbwERbv19RyljvgSdKlT46RiFTsA==:utf-8","label":"Management PC Username","attrs":{"is_secret_modified":false,"secret_reference":{},"type":"SECRET"},"editables":{"value":true},"is_hidden":false,"options":{"type":"PREDEFINED","choices":[]}},{"val_type":"STRING","is_mandatory":true,"description":"","data_type":"BASE","type":"SECRET","name":"management_pc_password","value":"jGzzH4pgFYvDnjp54qV8D+AAqRkpWRpS72DN5p2YgVsm4VjYqjkdBvpo9Q==:utf-8","label":"Management PC Password","attrs":{"is_secret_modified":false,"secret_reference":{},"type":"SECRET"},"editables":{"value":true},"is_hidden":false,"options":{"type":"PREDEFINED","choices":[]}},{"val_type":"STRING","is_mandatory":true,"description":"","data_type":"BASE","type":"LOCAL","name":"app_name","value":"Wordpress_DB","label":"APP Name","attrs":{"type":""},"editables":{"value":true},"is_hidden":false,"options":{"type":"PREDEFINED","choices":[]}},{"val_type":"STRING","is_mandatory":true,"description":"","data_type":"BASE","type":"LOCAL","name":"blueprint_name","value":"Wordpress_DB","label":"Blueprint Name","attrs":{"type":""},"editables":{"value":true},"is_hidden":false,"options":{"type":"PREDEFINED","choices":[]}},{"val_type":"STRING","is_mandatory":true,"description":"","data_type":"BASE","type":"LOCAL","name":"project_name","value":"Yellow_project","label":"Project Name for App Creation","attrs":{"type":""},"editables":{"value":true},"is_hidden":false,"options":{"type":"PREDEFINED","choices":[]}},{"val_type":"STRING","is_mandatory":true,"description":"","data_type":"BASE","type":"LOCAL","name":"account_name","value":"Production_1","label":"Account Name","attrs":{"type":""},"editables":{"value":true},"is_hidden":false,"options":{"type":"PREDEFINED","choices":[]}},{"val_type":"STRING","is_mandatory":true,"description":"Project environment name for BP and App protection policy.","data_type":"BASE","type":"LOCAL","name":"environment_name","value":"Yellow_project_Environment","label":"Environment Name","attrs":{"type":""},"editables":{"value":true},"is_hidden":false,"options":{"type":"PREDEFINED","choices":[]}},{"val_type":"STRING","is_mandatory":true,"description":"Should be in json format. IE. {\"Key\":\"Value\"}","data_type":"BASE","type":"LOCAL","name":"tenant_category","value":"{\"TenantName\":\"Yellow\"}","label":"Tenant Category for APP VM","attrs":{"type":""},"editables":{"value":true},"is_hidden":false,"options":{"type":"PREDEFINED","choices":[]}},{"val_type":"STRING","is_mandatory":true,"description":"","data_type":"BASE","type":"LOCAL","name":"cluster_name","value":"PHX-POC092","label":"Cluster Name","attrs":{"type":"LOCAL"},"editables":{"value":true},"is_hidden":false,"options":{"type":"PREDEFINED","choices":[]}},{"val_type":"STRING","is_mandatory":true,"description":"","data_type":"BASE","type":"LOCAL","name":"vm_os","value":"Linux","label":"App VM OS Type","attrs":{"type":"LOCAL"},"editables":{"value":true},"is_hidden":false,"options":{"type":"PREDEFINED","choices":["Linux","Windows"]}},{"val_type":"STRING","is_mandatory":true,"description":"","data_type":"BASE","type":"LOCAL","name":"image_name","value":"wordpress-db","label":"Image Name for APP Creation","attrs":{"type":""},"editables":{"value":true},"is_hidden":false,"options":{"type":"PREDEFINED","choices":[]}},{"regex":{"should_validate":false,"value":"^[\\d]*$"},"val_type":"INT","is_mandatory":true,"description":"","data_type":"BASE","type":"LOCAL","name":"vm_memory","value":"2","label":"App VM Memory in GB","attrs":{"type":""},"editables":{"value":true},"is_hidden":false,"options":{"type":"PREDEFINED","choices":[]}},{"regex":{"should_validate":false,"value":"^[\\d]*$"},"val_type":"INT","is_mandatory":true,"description":"","data_type":"BASE","type":"LOCAL","name":"vm_vcpus","value":"2","label":"Number of App VM vCPUs","attrs":{"type":""},"editables":{"value":true},"is_hidden":false,"options":{"type":"PREDEFINED","choices":[]}},{"val_type":"STRING","is_mandatory":true,"description":"","data_type":"BASE","type":"LOCAL","name":"subnet_name","value":"Yellow_Overlay_Subnet","label":"Subnet Name for APP VM","attrs":{"type":""},"editables":{"value":true},"is_hidden":false,"options":{"type":"PREDEFINED","choices":[]}},{"val_type":"STRING","is_mandatory":false,"description":"Provide IP if static IP for application VM needed, otherwise IP will be selected using DHCP.","data_type":"BASE","type":"LOCAL","name":"custom_ip_for_vm","value":"10.10.10.19","label":"Custom IP for VM","attrs":{"type":""},"editables":{"value":true},"is_hidden":false,"options":{"type":"PREDEFINED","choices":[]}},{"val_type":"STRING","is_mandatory":true,"description":"","data_type":"BASE","type":"SECRET","name":"credential_user","value":"dJVMpZv3U5eOozn1+cdh9XVToEWzqA+llNWBtZtMYCFRn0ZxZQ==:utf-8","label":"App Credential User","attrs":{"is_secret_modified":false,"secret_reference":{},"type":"SECRET"},"editables":{"value":true},"is_hidden":false,"options":{"type":"PREDEFINED","choices":[]}},{"val_type":"STRING","is_mandatory":true,"description":"","data_type":"BASE","type":"SECRET","name":"credential_password","value":"JW9D5Nvh8jx9Ybw\/PzNyAm9fR7XvuR+YkheHnSEha3ULLGiwj5SPpw==:utf-8","label":"App Credential Password","attrs":{"is_secret_modified":false,"secret_reference":{},"type":"SECRET"},"editables":{"value":true},"is_hidden":false,"options":{"type":"PREDEFINED","choices":[]}},{"val_type":"STRING","is_mandatory":true,"description":"","data_type":"BASE","type":"LOCAL","name":"PC_IP","value":"10.42.92.21","label":"PC IP","attrs":{"type":""},"editables":{"value":true},"is_hidden":false,"options":{"type":"PREDEFINED","choices":[]}},{"val_type":"STRING","is_mandatory":true,"description":"","data_type":"BASE","type":"SECRET","name":"prism_central_username","value":"vq8eAkkmrrTMG\/6C7m5Jte1PBqLbpStr\/mUoijGOgxKG+wELOg==:utf-8","label":"Project User Username","attrs":{"is_secret_modified":false,"secret_reference":{},"type":"SECRET"},"editables":{"value":true},"is_hidden":false,"options":{"type":"PREDEFINED","choices":[]}},{"val_type":"STRING","is_mandatory":true,"description":"","data_type":"BASE","type":"SECRET","name":"prism_central_passwd","value":"t4kJZuryTJRs6U5T3\/0ePAbtzE7JlFU5qtVshnKjHlPWroVUU\/XZcEc\/\/Q==:utf-8","label":"Project User Password","attrs":{"is_secret_modified":false,"secret_reference":{},"type":"SECRET"},"editables":{"value":true},"is_hidden":false,"options":{"type":"PREDEFINED","choices":[]}}]}},"name":"Single VM Blueprint"},"api_version":"3.0","metadata":{"last_update_time":"1663671429181532","kind":"runbook","spec_version":14,"creation_time":"1662462422034999","name":"Single VM Blueprint"}}